"D1_RECT - D2_RECT" = D1_RECT - D2_RECT,
"D2_DIAL - D2_RECT" = D2_DIAL - D2_RECT,
"block_D1_DIAL" = block_D1_DIAL,
"block_D1_RECT" = block_D1_RECT,
"block_D2_DIAL" = block_D2_DIAL,
"block_D2_RECT" = block_D2_RECT)
summary(glht(m, c1), test = adjusted("bonferroni"))
data$pred_dist = predict(m, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(acc=mn, pred=mn_pr)
})
r
r = ddply(data, c('stimtype', 'ruletype', 'block'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
r
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
head(data)
data$pred_dist = predict(m, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
r
m1 = lmer(dist_med ~ stimtype*ruletype + block + (1|sid),
data=data)
m2 = lmer(dist_med ~ stimtype*ruletype*block + (1|sid),
data=data)
anova(m1,m2)
head(data)
m3 = lmer(dist_med ~ stimtype*ruletype*block + block*(ruletype/rulevariant) + (1|sid),
data=data)
summary(m3)
summary(m3)
m3 = lmer(dist_med ~ stimtype*ruletype*block + block*rulevariant + (1|sid),
data=data)
summary(m3)
m3 = lmer(dist_med ~ stimtype*ruletype*block + block*(ruletype/rulevariant) + (1|sid),
data=data)
summary(m3)
m3 = lmer(dist_med ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
data=data)
summary(m3)
anova(m2,m3)
data$pred_dist = predict(m3, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
m3 = lmer(dist_med ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
data=data)
summary(m3)
m4 = lmer(dist_med ~ stimtype*ruletype*block + block*(ruletype/rulevariant) + (1|sid),
data=data)
anova(m3,m4)
summary(m4)
# comparisons
m1 = glmer(acc ~ stimtype*ruletype + block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
m2 = glmer(acc ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
anova(m1,m2)
m3 = glmer(acc ~ stimtype*ruletype*block + block*ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
anova(m2,m3)
# the model
m = glmer(acc ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(m)
m2 = glmer(acc ~ stimtype*ruletype + block*stimtype + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
anova(m1,m2)
m2 = glmer(acc ~ stimtype*ruletype + block*ruletype + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
anova(m1,m2)
# the model
m = glmer(acc ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
data$pred_acc = predict(m, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'rulevariant', 'block'), function(x) {
mn = mean(x$acc)
mn_pr = mean(x$pred_acc)
data.frame(acc=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
grid.arrange(p1, p2, p3, p4)
# the model
m = glmer(acc ~ stimtype*ruletype + block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
data$pred_acc = predict(m, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'rulevariant', 'block'), function(x) {
mn = mean(x$acc)
mn_pr = mean(x$pred_acc)
data.frame(acc=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
grid.arrange(p1, p2, p3, p4)
summary(m)
m = glmer(acc ~ stimtype*ruletype*block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(m)
# the model
m = glmer(acc ~ stimtype*ruletype + block + ruletype/rulevariant + (1|sid),
weights=rep(32, nrow(data)), data=data, family=binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
data$pred_acc = predict(m, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'rulevariant', 'block'), function(x) {
mn = mean(x$acc)
mn_pr = mean(x$pred_acc)
data.frame(acc=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=acc, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0.5, 1)
grid.arrange(p1, p2, p3, p4)
m3 = lmer(dist_med ~ stimtype*ruletype + block + ruletype/rulevariant + (1|sid),
data=data)
data$pred_dist = predict(m3, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
m4 = lmer(dist_med ~ stimtype*ruletype*block + block*(ruletype/rulevariant) + (1|sid),
data=data)
anova(m3,m4)
data$pred_dist = predict(m3, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
data$pred_dist = predict(m4, type='response')
r = ddply(data, c('stimtype', 'ruletype', 'block', 'rulevariant'), function(x) {
mn = mean(x$dist_med)
mn_pr = mean(x$pred_dist)
data.frame(obs=mn, pred=mn_pr)
})
p1 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p2 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='rb',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p3 = ggplot(data=r[r$stimtype=='antenna' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
p4 = ggplot(data=r[r$stimtype=='rectangle' & r$ruletype=='ii',]) +
geom_line(aes(x=block, y=obs, col=rulevariant)) +
geom_line(aes(x=block, y=pred, col=rulevariant), linetype=2) +
ylim(0, 2)
grid.arrange(p1, p2, p3, p4)
anova(m3,m4)
summary(m4)
D1_DIAL = c(1,0,0,0,0,0,0, 0, 0,.5, 0,0,0,0,0,0)
D1_RECT = c(1,1,0,0,0,0,0,.5, 0, 0, 0,0,0,0,0,0)
D2_DIAL = c(1,0,1,0,0,0,0, 0,.5, 0, 0,0,0,0,0,0)
D2_RECT = c(1,1,1,1,0,0,0, 0, 0, 0,.5,0,0,0,0,0)
D1_DIAL_ANGLE  = c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_DIAL_RADIUS = c(1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0)
D1_RECT_WIDTH  = c(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_RECT_HEIGHT = c(1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0)
D2_DIAL_POS    = c(1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
D2_DIAL_NEG    = c(1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0)
D2_RECT_SIZE   = c(1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0)
D2_RECT_SIZE   = c(1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0)
block_D1_DIAL_ANGLE   = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
block_D1_DIAL_RADIUS  = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0)
block_D1_RECT_WIDTH   = c(0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0)
block_D1_RECT_HEIGHT  = c(0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0)
block_D2_DIAL_POS     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0)
block_D2_DIAL_NEG     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0)
block_D2_RECT_SIZE    = c(0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0)
block_D2_RECT_SHAPE   = c(0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE
)
D2_RECT_SHAPE  = c(1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE
)
summary(glht(m, c1), test = adjusted("bonferroni"))
m = m4
summary(m4)
summary(glht(m, c1), test = adjusted("bonferroni"))
summary(glht(m, c1), test = adjusted("bonferroni"))
summary(m)
D1_DIAL_ANGLE  = c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_DIAL_RADIUS = c(1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0)
D1_RECT_WIDTH  = c(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_RECT_HEIGHT = c(1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0)
D2_DIAL_POS    = c(1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
D2_DIAL_NEG    = c(1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0)
D2_RECT_SIZE   = c(1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0)
D2_RECT_SHAPE  = c(1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE
)
summary(glht(m, c1), test = adjusted("bonferroni"))
summary(glht(m, c1), test = adjusted("bonferroni"))
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
"block_D1_DIAL_ANGLE - block_D1_DIAL_ANGLE" = block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS
)
m = m4
D1_DIAL_ANGLE  = c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_DIAL_RADIUS = c(1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0)
D1_RECT_WIDTH  = c(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
D1_RECT_HEIGHT = c(1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0)
D2_DIAL_POS    = c(1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
D2_DIAL_NEG    = c(1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0)
D2_RECT_SIZE   = c(1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0)
D2_RECT_SHAPE  = c(1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0)
block_D1_DIAL_ANGLE   = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
block_D1_DIAL_RADIUS  = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0)
block_D1_RECT_WIDTH   = c(0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0)
block_D1_RECT_HEIGHT  = c(0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0)
block_D2_DIAL_POS     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0)
block_D2_DIAL_NEG     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0)
block_D2_RECT_SIZE    = c(0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0)
block_D2_RECT_SHAPE   = c(0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
"block_D1_DIAL_ANGLE - block_D1_DIAL_ANGLE" = block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS
)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2))
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2))
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE)
summary(m4)
block_D1_DIAL_ANGLE   = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0)
block_D1_DIAL_RADIUS  = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0)
block_D1_RECT_WIDTH   = c(0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0)
block_D1_RECT_HEIGHT  = c(0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0)
block_D2_DIAL_POS     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0)
block_D2_DIAL_NEG     = c(0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0)
block_D2_RECT_SIZE    = c(0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0)
block_D2_RECT_SHAPE   = c(0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
"block_D1_DIAL_ANGLE - block_D1_DIAL_ANGLE" = block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS,)
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE)
summary(glht(m, c1), test = adjusted("bonferroni"))
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
"block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS" = block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS)
summary(glht(m, c1), test = adjusted("bonferroni"))
c1 = rbind("D1_DIAL - D1_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D1_RECT_WIDTH + D1_RECT_HEIGHT)/2),
"D1_DIAL - D2_DIAL" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_DIAL - D2_RECT" = ((D1_DIAL_ANGLE + D1_DIAL_RADIUS)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_RECT - D2_DIAL" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_DIAL_POS + D2_DIAL_NEG)/2),
"D1_RECT - D2_RECT" = ((D1_RECT_WIDTH + D1_RECT_HEIGHT)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D2_DIAL - D2_RECT" = ((D2_DIAL_POS + D2_DIAL_NEG)/2 - (D2_RECT_SIZE + D2_RECT_SHAPE)/2),
"D1_DIAL_ANGLE - D1_DIAL_RADIUS" = D1_DIAL_ANGLE - D1_DIAL_RADIUS,
"D1_RECT_WIDTH - D1_RECT_HEIGHT" = D1_RECT_WIDTH - D1_RECT_HEIGHT,
"D2_DIAL_POS - D2_DIAL_NEG" = D2_DIAL_POS - D2_DIAL_NEG,
"D2_RECT_SIZE - D2_RECT_SHAPE" = D2_RECT_SIZE - D2_RECT_SHAPE,
"D2_DIAL_NEG - D2_RECT_SIZE" = D2_DIAL_NEG - D2_RECT_SIZE,
"block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS" = block_D1_DIAL_ANGLE - block_D1_DIAL_RADIUS,
"block_D1_RECT_WIDTH - block_D1_RECT_HEIGHT" = block_D1_RECT_WIDTH - block_D1_RECT_HEIGHT,
"block_D2_DIAL_POS - block_D2_DIAL_NEG" = block_D2_DIAL_POS - block_D2_DIAL_NEG,
"block_D2_RECT_SIZE - block_D2_RECT_SHAPE" = block_D2_RECT_SIZE - block_D2_RECT_SHAPE)
summary(glht(m, c1), test = adjusted("bonferroni"))
